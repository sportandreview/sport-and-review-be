logging:
  level:
    org.springframework.web: DEBUG
    org.hibernate: ERROR
    org.apache.logging.log4j: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: health,info

server:
  port: ${PORT:8008}

spring:
  application:
    name: Sport And Review API
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  datasource:
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        order_inserts: true
        jdbc:
          batch_size: 5
        lob:
          non_contextual_creation: true
        show_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: profile, email
            redirect-uri: "{baseUrl}/rest/api/sportandreview/login/oauth2/code/google"
            authorization-grant-type: authorization_code
            client-name: Google
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
  jackson:
    default-property-inclusion: non_null

springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true

eureka:
  client:
    register-with-eureka: false
    fetch-registry: false
    service-url:
      defaultZone: http://localhost:8761/eureka/

docker:
  smtp:
    server: smtp.office365.com
    username: ${SMTP_USERNAME:sport-and-review@outlook.it}
    pw: ${SMTP_PASSWORD:sportAndReview}

SportAndReview:
  password-url: https://www.esempio.com/pagina
